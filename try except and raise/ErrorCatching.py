#Блоки try/except.

#Вот мы и дошли до обработки ошибок в python. Зачастую обработка ошибок помогает получить ошибку без остановки кода из-за ошибки. Давайте же поподробнее рассмотрим их.

#Блок try используется для того, чтобы попытаться сделать какое-либо дело. Если при работе try вылезет ошибка, то сработает except.

#Так, я вам уже показывал int(input()), где мы получили ошибку при вводе string-значения в int, давайте теперь попробуем обработать эту ошибку!

#Добавляем try и двоеточие, в него добавляем a = int(input()) для ввода значения. Если пользователь введёт строковое значение, то сработает блок except.
#В блоке except я добавил Exception, это указывается как ошибка, для того чтобы укоротить её название я добавил as e, т.е присвоил ошибке имя e. Далее просто вывожу ошибку.
try:
    a = int(input())
    print(a)
except Exception as e:
    print(e)

#Получаем такую ошибку: invalid literal for int() with base 10
#Если мы попробуем ввести строковое значение без обработчика, то нам выведет ValueError, давайте теперь посмотрим ValueError.
try:
    a = int(input())
    print(a)
except ValueError:
    print("Вводите целочисленное значение!")
except Exception as e:
    print(e)

#Я просто добавил except ValueError, теперь если сработает блок ошибки ValueError, то нам выведет сообщение о том, что нужно вводить целочисленное значение.
